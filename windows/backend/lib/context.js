// Generated by IcedCoffeeScript 1.8.0-d
(function() {
  var LRPreferences, LRStats, LiveReloadContext, Path, RPC, Session, createApiTree, debug;

  debug = require('debug')('livereload:context');

  Path = require('path');

  Session = require('livereload-core');

  RPC = require('./rpc/rpc');

  LRPreferences = require('./services/preferences');

  LRStats = require('./services/stats');

  createApiTree = require('apitree').createApiTree;

  LiveReloadContext = (function() {
    function LiveReloadContext() {
      this.universe = new Session.R.Universe();
      this.paths = {};
      this.paths.root = Path.dirname(__dirname);
      this.paths.rpc = Path.join(this.paths.root, 'rpc-api');
      this.paths.res = Path.join(this.paths.root, 'res');
      this.apiTree = createApiTree(this.paths.rpc);
      this.universe.define(Session);
      this.apiTree.projects.preinit(this.universe);
      this.session = this.universe.create(Session);
      this.paths.bundledPlugins = process.env.LRBundledPluginsOverride || Path.join(this.paths.root, '../../plugins');
      this.session.addPluginFolder(this.paths.bundledPlugins);
    }

    LiveReloadContext.prototype.setupRpc = function(transport) {
      return this.rpc = new RPC(transport);
    };

    LiveReloadContext.prototype.setupRuntime = function(_arg) {
      var appDataDir;
      this.version = _arg.version, appDataDir = _arg.appDataDir;
      this.paths.appData = appDataDir;
      debug("setupRuntime: version = " + this.version + ", paths.appData = " + this.paths.appData);
      this.preferences = new LRPreferences(this.paths.appData);
      this.stats = new LRStats(this.preferences);
      return this.session.setMonitoringFilter(require('./modules/whiteblacklists').loadMonitoredFilesList(this));
    };

    return LiveReloadContext;

  })();

  module.exports = LiveReloadContext;

}).call(this);
