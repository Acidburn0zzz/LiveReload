// Generated by CoffeeScript 1.3.3
(function() {
  var RegExp_escape, RegExp_fromPattern, Url, urlmatch;

  Url = require('url');

  RegExp_escape = function(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
  };

  RegExp_fromPattern = function(pattern, prefix, suffix) {
    return new RegExp(prefix + RegExp_escape(pattern).replace(/^livereloadany\\\./, '(?:.*\\.)?').replace(/livereloadany/g, '.*') + suffix);
  };

  urlmatch = function(patternString, actualString) {
    var actual, pattern, _ref;
    if (patternString.indexOf('://') < 0) {
      patternString = "*://" + patternString;
    }
    pattern = Url.parse(patternString.replace(/\*/g, 'livereloadany'));
    actual = Url.parse(actualString);
    if (!pattern.host) {
      return false;
    }
    if (!RegExp_fromPattern(pattern.hostname, '^', '$').test(actual.hostname)) {
      return false;
    }
    if ((_ref = actual.port) == null) {
      actual.port = {
        'http:': '80',
        'https:': 443
      }[actual.protocol];
    }
    if (pattern.port && !RegExp_fromPattern(pattern.port, '^', '$').test(actual.port)) {
      return false;
    }
    if (pattern.protocol && !RegExp_fromPattern(pattern.protocol, '^', '$').test(actual.protocol)) {
      return false;
    }
    if (pattern.pathname && !RegExp_fromPattern(pattern.pathname, '^', '').test(actual.pathname)) {
      return false;
    }
    return true;
  };

  module.exports = urlmatch;

}).call(this);
