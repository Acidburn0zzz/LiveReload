// Generated by CoffeeScript 1.3.3
(function() {
  var RegExp_escape, create,
    __hasProp = {}.hasOwnProperty;

  RegExp_escape = function(str) {
    return str.replace(/[\\\^\$*+[\]?{}.=!:(|)]/g, "\\$&");
  };

  create = function(prefix, suffix) {
    var subst;
    prefix = RegExp_escape(prefix);
    suffix = RegExp_escape(suffix);
    subst = function(value, args) {
      var argName, argValue, item, k, result, v, _i, _len;
      switch (typeof value) {
        case 'string':
          for (argName in args) {
            if (!__hasProp.call(args, argName)) continue;
            argValue = args[argName];
            value = value.replace(RegExp("" + prefix + (RegExp_escape(argName)) + suffix, "g"), argValue);
          }
          return value;
        case 'object':
          if (Array.isArray(value)) {
            result = [];
            for (_i = 0, _len = value.length; _i < _len; _i++) {
              item = value[_i];
              if ((typeof item === 'string') && ((argValue = args[item]) != null) && (Array.isArray(argValue))) {
                result.push.apply(result, argValue);
              } else {
                result.push(subst(item, args));
              }
            }
          } else if (!(value != null)) {
            result = value;
          } else if (value.constructor === Object) {
            result = {};
            for (k in value) {
              if (!__hasProp.call(value, k)) continue;
              v = value[k];
              k = subst(k, args);
              v = subst(v, args);
              result[k] = v;
            }
          } else {
            result = value;
          }
          return result;
        default:
          return value;
      }
    };
    subst.wrap = function(p, s) {
      return create(p, s);
    };
    return subst;
  };

  module.exports = create('', '');

}).call(this);
