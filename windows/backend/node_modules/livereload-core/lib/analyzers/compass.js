// Generated by IcedCoffeeScript 1.8.0-d
(function() {
  var CompassAnalyzer, RelPathList, debug,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  debug = require('debug')('livereload:core:analyzer');

  RelPathList = require('pathspec').RelPathList;

  module.exports = CompassAnalyzer = (function(_super) {
    __extends(CompassAnalyzer, _super);

    function CompassAnalyzer() {
      return CompassAnalyzer.__super__.constructor.apply(this, arguments);
    }

    CompassAnalyzer.prototype.message = "Detecting Compass";

    CompassAnalyzer.prototype.computePathList = function() {
      return RelPathList.parse(["*.rb", "*.config"]);
    };

    CompassAnalyzer.prototype.clear = function() {
      return this.project.compassMarkers = [];
    };

    CompassAnalyzer.prototype.removed = function(relpath) {};

    CompassAnalyzer.prototype.update = function(file, callback) {
      return callback();
    };

    return CompassAnalyzer;

  })(require('./base'));

}).call(this);
