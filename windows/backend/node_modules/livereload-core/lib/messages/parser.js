// Generated by IcedCoffeeScript 1.8.0-d
(function() {
  var MessageFormat, MessageParser;

  MessageFormat = require('./format');

  module.exports = MessageParser = (function() {
    function MessageParser(_arg) {
      var errors, warnings;
      errors = _arg.errors, warnings = _arg.warnings;
      this.formats = this._createFormats('warning', warnings || []).concat(this._createFormats('error', errors || []));
    }

    MessageParser.prototype._createFormats = function(type, patterns) {
      var pattern, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = patterns.length; _i < _len; _i++) {
        pattern = patterns[_i];
        _results.push(new MessageFormat(pattern, this._createMessage.bind(this, type)));
      }
      return _results;
    };

    MessageParser.prototype._createMessage = function(type) {
      return {
        type: type
      };
    };

    MessageParser.prototype.parse = function(text) {
      var all, format, messages, _i, _len, _ref, _ref1;
      all = [];
      text = text.trim() + "\n";
      _ref = this.formats;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        format = _ref[_i];
        if (text === "\n") {
          break;
        }
        _ref1 = format.scan(text), text = _ref1.text, messages = _ref1.messages;
        if (messages.length > 0) {
          all.push.apply(all, messages);
          text = text.trim() + "\n";
        }
      }
      return {
        messages: all,
        unparsed: text.trim()
      };
    };

    return MessageParser;

  })();

}).call(this);
