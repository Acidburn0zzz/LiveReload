(function() {
  var StubCarrier;

  module.exports = StubCarrier = (function() {
    function StubCarrier() {
      this.messages = [];
      this._idleFuncs = [];
      this._idleTimer = null;
      this._resetIdleTimer();
    }

    StubCarrier.prototype.pipe = function(service) {
      this.service = service;
      return this;
    };

    StubCarrier.prototype.simulate = function(message, callback) {
      if (callback) {
        this._resetIdleTimer();
        this.onidle(callback);
      }
      return this.service.onmessage(message);
    };

    StubCarrier.prototype.send = function(message) {
      this.messages.push(message);
      return this._resetIdleTimer();
    };

    StubCarrier.prototype.onidle = function(func) {
      return this._idleFuncs.push(func);
    };

    StubCarrier.prototype._resetIdleTimer = function() {
      if (this._idleTimer) {
        clearTimeout(this._idleTimer);
      }
      return this._idleTimer = setTimeout(this._handleIdle.bind(this), 1);
    };

    StubCarrier.prototype._handleIdle = function() {
      var funcs,
        _this = this;
      funcs = this._idleFuncs;
      this._idleFuncs = [];
      return funcs.forEach(function(func) {
        return func();
      });
    };

    return StubCarrier;

  })();

}).call(this);
